plugins {
    id 'com.android.application'
    id 'jacoco'
}


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.myapp.sporify"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        flavorDimensions "default"
        productFlavors {
            prod {
                applicationId "com.myapp.sporify"
                versionCode 1
                versionName "1.0.0"
            }
            dev {
                applicationId "com.myapp.sporify.dev"
                versionCode 15
                versionName "1.0.0"
            }
        }
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled = true
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    /*
     * To let gradle automate signing process, lintOptions to be added
     * */
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    /*
     * APK build output name
     */
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "sporify"
            def SEP = "_"
            def flavor = variant.productFlavors[0].name
            def version = variant.versionName
            def date = new Date();
            def formattedDate = date.format('ddMMyy_HHmm')

            def newApkName = project + SEP + flavor + SEP + version + SEP + formattedDate + ".apk"

            outputFileName = new File(newApkName)
        }
    }

}


import java.nio.file.Paths

/*
* Automates generation of Release APK
* ./gradlew assembleRelease
* */
Properties props = new Properties()
def userHome = Paths.get(System.getProperty('user.home'));
def propFile = file(userHome.resolve('signing.properties'))

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('KEY_STORE_PASSWORD')
            && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['KEY_STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}



dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.2.0'

    testImplementation 'junit:junit:4.+'
    testImplementation "org.mockito:mockito-core:3.12.4"


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'


    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'



    implementation 'com.facebook.shimmer:shimmer:0.5.0'


}